"{\"query\": \"\\ndrop table if exists kpi_validation; CREATE LOCAL TEMP TABLE kpi_validation ON COMMIT PRESERVE ROWS AS\\nselect b.*, ((\\\"(q4-q3)%\\\" + \\\"(q2-q3)%\\\"+\\\"(q2-q1)%\\\")/3) as threshold from (\\n\\tselect METRIC_ID,entity,q4,q3,q2,q1,month_ending_q4,month_ending_q3,month_ending_q2,month_ending_q1,\\n\\tabs((q4-q3)/q3) *100    \\\"(q4-q3)%\\\",\\n\\tabs((q3-q2)/q2) *100    \\\"(q2-q3)%\\\",\\n\\tabs((q2-q1)/q1) *100    \\\"(q2-q1)%\\\"\\n\\t\\n\\tfrom (\\n\\t\\n\\twith run_params_cte as (select distinct reporting_end_period  from run_params limit 1) \\n\\tselect  distinct\\n\\t\\t\\n\\t\\ta.entity,\\n\\t\\tg.ReportGroupID,\\n\\t\\ta.metric_id,\\n\\t\\ta.reporting_end_period \\\"month_ending_q4\\\",\\n\\t\\tb.reporting_end_period \\\"month_ending_q3\\\",\\n\\t\\tc.reporting_end_period \\\"month_ending_q2\\\",\\n\\t\\td.reporting_end_period \\\"month_ending_q1\\\",\\n\\t\\tsum(a.metric_value) q4,\\n\\t\\tsum(b.metric_value) \\\"q3\\\",\\n\\t\\tsum(c.metric_value)\\\"q2\\\",\\n\\t\\tsum(d.metric_value)  \\\"q1\\\"\\n\\t\\tfrom    \\n\\t\\t(\\n\\t\\t\\tselect  distinct ReportGroupName, ReportGroupID\\n\\t\\t\\tfrom    BI_REPORTING.EligGroupingMembers\\n\\t\\t\\twhere   isactive=1\\n\\t\\t) g\\n\\t\\tjoin    sc_kpi.metrics_values a       on a.entity=g.ReportGroupid\\n\\t\\t full outer  join   sc_kpi.metrics_values b       on a.entity=b.entity and a.metric_id=b.metric_id and nvl(a.dims,'aaa') = nvl(b.dims, 'aaa')\\n\\t\\tjoin run_params_cte as r on to_char(b.reporting_end_period,'yyyy-mm') = case when (ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3 = 0 \\n\\t\\tthen to_char(year(r.reporting_end_period)-1) || '-12'  \\n\\t\\telse to_char(r.reporting_end_period,'yyyy') || '-' || trim(to_char((ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3,'09')) \\n\\t\\tend  \\n\\t\\t full outer join    sc_kpi.metrics_values c       on a.entity=c.entity and a.metric_id=c.metric_id and nvl(a.dims,'aaa') = nvl(c.dims, 'aaa')\\n\\t\\t and to_char(c.reporting_end_period,'yyyy-mm') = case when (ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3 = 0 \\n\\t\\tthen to_char(year(r.reporting_end_period)-1) || '-09' \\n\\t\\twhen (ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3-3 = 0 \\n\\t\\tthen to_char(year(r.reporting_end_period)-1) || '-12'  \\n\\t\\telse  to_char(r.reporting_end_period,'yyyy') || '-' || trim(to_char(((ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3-3),'09'))  end\\n\\t\\tfull outer join    sc_kpi.metrics_values d       on a.entity=d.entity and a.metric_id=d.metric_id and nvl(a.dims,'aaa') = nvl(d.dims, 'aaa')\\n\\t\\tand to_char(d.reporting_end_period,'yyyy-mm') = case when (ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3 = 0 \\n\\t\\tthen to_char(year(r.reporting_end_period)-1) || '-06' \\n\\t\\twhen (ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3-3 = 0 \\n\\t\\tthen to_char(year(r.reporting_end_period)-1) || '-09'  \\n\\t\\twhen (ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3-6 = 0 \\n\\t\\tthen to_char(year(r.reporting_end_period)-1) || '-12'  \\n\\t\\telse  to_char(r.reporting_end_period,'yyyy') || '-' || trim(to_char(((ceil((to_number(to_char(r.reporting_end_period,'mm'))/3))-1)*3-6),'09'))  end\\n\\t\\tJoin sc_kpi.metrics_metadata m on  a.metric_id= m.metric_id and m.functional_area like 'qbr_%'\\n\\t\\twhere   to_char(a.reporting_end_period,'yyyy-mm') =   to_char(r.reporting_end_period,'yyyy-mm')\\n\\t\\t and b.metric_value is not null and b.metric_value <> 0 and d.metric_value <>0 and c.metric_value <> 0\\n\\t\\n\\t\\tand a.metric_id::int not in (100002082,100002208) and a.entity not in ('8500001','8500002','8500003')\\n\\t\\tgroup by 1,2,3,4,5,6,7\\n\\t\\torder by 1,2,4\\n\\t\\n ) a ) b\\n where abs(q4-q3)::int >0  and abs(q3-q2)::int >0  and abs(q2-q1)::int >0 --and q3>1000 and q4 >1000 and q2>1000 and q1>1000\\n and (q4-q3)::int >0  and q4>200 and q3>200 and q2 >200 and q1>200\\n ;\\n \\n drop table if exists threshold;\\nCREATE LOCAL TEMP TABLE threshold ON COMMIT PRESERVE ROWS AS\\n select metric_id,sum(threshold) /count(*) as avg_threshold from kpi_validation group by metric_id ;\\n \\n \\ndrop table if exists validation_result;\\ncreate local temp table validation_result on commit preserve rows as\\n select  month_ending_q4 month_ending_q2,month_ending_q3 month_ending_q1, v.metric_id ,entity ,q4 metric_value_Q2,q3 metric_value_Q1 ,\\\"(q4-q3)%\\\" validation_value ,threshold,t.avg_threshold,\\n case\\n  when  \\\"(q4-q3)%\\\" <= (threshold+t.avg_threshold) then 'PASS'  \\n else case when abs(validation_value-(threshold+t.avg_threshold))::int <=50  then 'PASS'  else 'fail'end end  result\\n from   kpi_validation  v join threshold  t  on v.metric_id = t.metric_id ;\\n\"}"